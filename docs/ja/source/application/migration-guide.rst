==============================
開発環境マイグレーションガイド
==============================
この文書では、Asakusa Framework のバージョンアップに伴う、開発環境のマイグレーション手順について解説します。

本書で説明しているバージョン以前のマイグレーション情報については、 :doc:`previous-migration-guide` を参照してください。

バージョン共通のマイグレーション手順
====================================
ここでは、各バージョン共通のマイグレーション手順について説明します。

ここで説明する手順に加えて、マイグレーション先のバージョンや現在利用している環境によっては
後述するバージョン固有のマイグレーション手順が必要となる場合があるので
必ずその内容も確認してください。

Gradleプロジェクトのマイグレーション
------------------------------------
バージョン 0.6.0 以降の :doc:`../introduction/start-guide` や :doc:`gradle-plugin` の手順に従って構築したGradleベースのアプリケーションプロジェクトについては、以下のドキュメントを参照してマイグレーションを実施してください。

* :ref:`vup-gradle-plugin` ( :doc:`gradle-plugin` )

Mavenプロジェクトのマイグレーション
-----------------------------------
バージョン 0.5.3 以前の :doc:`../introduction/start-guide` や :doc:`maven-archetype` の手順に従って構築したMavenベースのアプリケーションプロジェクトについては、以下のドキュメンを参照してGradleプロジェクトへのマイグレーションを実施してください。

* :ref:`migrate-from-maven-to-gradle` ( :doc:`gradle-plugin` )

バージョン 0.7.1 へのマイグレーション
=====================================
バージョン 0.7.1 におけるバージョン固有のマイグレーション手順はありません。
各バージョン共通のマイグレーション手順のみを実施してください。

バージョン 0.7.0 へのマイグレーション
=====================================

..  warning::
    バージョン 0.7.0 は以前のバージョンからいくつかの重要な変更が行われました。
    マイグレーションを検討する際には必ず以下の内容を確認してください。

.. _versioning-sysytem-changing:

Asakusa Frameworkのバージョン体系の変更
---------------------------------------
バージョン 0.7.0 から Hadoop2系への対応が正式対応となりました。
正式にサポートするHadoopのバージョンラインが複数になったことに伴い、
Asakusa Frameworkのバージョン体系が以下のようになりました。

Hadoop1系向けAsakusa Framework
  Asakusa Framework バージョン ``0.x.x-hadoop1`` というバージョン名でリリース

Hadoop2系向けAsakusa Framework
  Asakusa Framework バージョン ``0.x.x-hadoop2`` というバージョン名でリリース

バージョン ``0.6.x`` 以前では
Hadoop1系向けAsakusa Frameworkは バージョン ``0.x.x`` のような
バージョン体系でリリースされていましたが、
バージョン ``0.7.0`` 以降では
Hadoop1系向けAsakusa Frameworkは バージョン ``0.x.x-hadoop1`` のように
**バージョン番号に '-hadoop1' という接尾辞を指定** するように変更されています。

``0.6.x`` 以前のバージョンからのマイグレーションを行う際には、
アプリケーションプロジェクトのビルドスクリプト ( ``build.gradle`` ) などに含まれる
Asakusa Frameworkバージョンに必ず新しいバージョン体系を指定してください。

なおHadoop2系向けのAsakusa Frameworkは以前のバージョンと同様に、
バージョン番号に ``-hadoop2`` という接尾辞を指定します。

例として、利用するAsakusa Framework を 
``0.6.2`` から ``0.7.0`` に変更する場合の
``build.gradle`` のバージョン指定を示します。

**build.gradle** : Asakusa Framework ``0.6.2`` を利用するプロジェクトのバージョン指定

..  code-block:: groovy
    
    asakusafw {
        asakusafwVersion '0.6.2'

**build.gradle** : Asakusa Framework ``0.7.0`` を利用するプロジェクトのバージョン指定

..  code-block:: groovy
    
    asakusafw {
        asakusafwVersion '0.7.0-hadoop1'

..  attention::
    ``build.gradle`` には先頭に ``buildscript`` ブロックで
    Asakusa Gradle Plugin のバージョンを指定しますが、
    このバージョンは Asakusa Frameworkのバージョン指定とは異なり、
    バージョン番号に ``-hadoop1`` や ``-hadoop2`` といった接尾辞は付かないことに注意してください。

**build.gradle** 

..  literalinclude:: gradle-attachment/build.gradle
    :language: groovy
    :lines: 1-8
    :emphasize-lines: 6

開発環境と運用環境で異なるHadoopバージョンを使用する
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
バージョン 0.7.0 では、開発環境で使用するHadoopはHadoop1系の利用を推奨しています。

また、:jinrikisha:`Jinrikisha <index.xml>` や :doc:`../introduction/start-guide`
の手順に従ってセットアップされる開発環境はHadoop1系が利用されます。

..  note::
    開発環境でHadoop1系の利用を推奨している主な理由は、
    現時点では開発環境の動作検証で使用しているHadoopプラットフォームにおいて、
    スタンドアロンモードの実行効率が
    Hadoop1系のほうが良好であると判断しているためです。
    
    Asakusa Frameworkが開発環境で動作検証を行なっている
    Hadoopプラットフォームの情報は、 :doc:`../product/target-platform` を参照してください。

バージョン ``0.6.x`` 以前では 開発環境と運用環境で異なるHadoopバージョンを利用する場合に、
開発環境を構成するアプリケーションプロジェクトとは別に、運用環境を構成する独立したプロジェクトの作成を推奨していました。

バージョン ``0.7.0`` からはそれぞれの環境の構成を「プロファイル」として記述し、
アプリケーションプロジェクト内で複数のプロファイルを管理する方式を推奨しています。

プロファイルの利用方法
(例えば開発環境でHadoop1系を利用し、運用環境でHadoop2系を利用するための設定)
については、以下のドキュメントを参照してください。

* :doc:`../administration/deployment-guide`

また、この変更に伴いバージョン ``0.6.x`` で提供していた
Asakusa Gradle Pluginの一部機能が非推奨になりました。
非推奨となったAsakusa Gradle Pluginについては、
以下のドキュメントを参照してください。

* :doc:`gradle-plugin-deprecated`

標準設定で使用するJavaバージョンの変更
--------------------------------------
バージョン 0.7.0 から Asakusa Gradle Pluginでアプリケーションプロジェクトに設定される
Javaバージョンが JDK6 から JDK7 に変更になりました。

Java 7に対応していないHadoopディストリビューション上で
アプリケーションを実行する場合、プロジェクトの設定でJDK 6を利用するよう
変更する必要があります。

プロジェクトで利用するJavaバージョンをJDK 6に変更する手順は、
以下のドキュメントを参照してください。

* :ref:`using-jdk6` ( :doc:`using-jdk` )

プロジェクトテンプレートのGradleバージョンの変更
------------------------------------------------
バージョン 0.7.0 から プロジェクトテンプレートに標準で設定される
Gradleバージョンが 1.12 から 2.1 に変更になりました。

過去のバージョンで作成したアプリケーションプロジェクトの
Gradleのバージョンを変更する場合は、
以下のドキュメントを参照してください。

* :ref:`vup-gradle-wrapper` ( :doc:`gradle-plugin` )

..  attention::
    バージョン 0.6.2 以前のAsakusa FrameworkはGradle 2.0以降に対応していません。
    プロジェクトのAsakusa Frameworkのバージョンをダウングレードする場合は、
    必ず利用するGradleのバージョンを合わせて変更してください

Mavenプロジェクトの非推奨化
---------------------------
バージョン 0.7.0 から Mavenプロジェクトは非推奨になりました。

本バージョンにおいては、 Mavenプロジェクトからでも
Asakusa Frameworkの多くの機能は従来通り利用できますが、
本バージョンからMavenプロジェクト特有の機能の動作検証は行われなくなったため、
Gradleプロジェクトへの移行を強く推奨します。

MavenプロジェクトからGradleプロジェクトへのマイグレーション手順については、
`Mavenプロジェクトのマイグレーション`_ を参照してください。

..  attention::
    バージョン 0.7.0 のドキュメントから
    動作検証が行われていない
    一部のMavenプロジェクト向け機能に関する説明が削除されました。

