DirectFileIoProcessor.errorConflictInputOutputBasePath=conflict input-output base path: {0}[{1}] -> {2}[{3}]
DirectFileIoProcessor.errorConflictOutputBasePath=conflict output-output base path: {0}[{1}] -> {2}[{3}]
DirectFileIoProcessor.errorDuplicateOutputBasePath=duplicate output-output base path: {0}[{1}] <-> {2}[{3}]
DirectFileIoProcessor.errorFailedToInstantiateDataFormat=failed to generate data format "{1}": {0}
DirectFileIoProcessor.errorIncompatibleDataFormatType=data format "{2}" does not support a data model "{1}": {0}
DirectFileIoProcessor.errorInvalidBasePathToken=cannot use "{1}" in {0}: {2}
DirectFileIoProcessor.errorInvalidBasePathTraverse=cannot use double-wildcard (**) in {0}: {1}
DirectFileIoProcessor.errorInvalidBasePathUnknown=invalid base path in {0} ({2}): {1}
DirectFileIoProcessor.errorInvalidDeletePattern=invalid delete pattern "{2}" ({1}) [{0}]
DirectFileIoProcessor.errorInvalidInputResourcePattern=invalid resource pattern ({1}): {0}
DirectFileIoProcessor.errorInvalidOrder=invalid output order  ({1}) [{0}]
DirectFileIoProcessor.errorInvalidOutputResourcePattern=invalid resource pattern ({1}) [{0}]
DirectFileIoProcessor.errorMissingDataFormat=data format must not be null: {0}
DirectFileIoProcessor.errorWildcardOutputWithOrder=output resource pattern with wildcards (*) must not contain any orders ({1}.{2}()): {0}
DirectFileIoProcessor.errorWildcardOutputWithPlaceholder=output resource pattern with wildcards (*) must not contain any properties ('{'name'}') ({1}.{2}()): {0}
DirectFileIoProcessor.errorWildcardOutputWithRandomNumber=output resource pattern with wildcards (*) must not contain any random numbers ([m..n]) ({1}.{2}()): {0}
DirectFileIoProcessor.infoDisabledInputFilter=Direct I/O input filter is disabled in current setting: {0} ({1})
DirectFileIoProcessor.nameInputBasePath=input base path
DirectFileIoProcessor.nameOutputBasePath=output base path
OutputPattern.errorDuplicateOrderProperty=duplicate property "{1}": {0}
OutputPattern.errorInvalidCharacter=invalid character: {0}
OutputPattern.errorInvalidOrder=invalid order format: {0}
OutputPattern.errorInvalidPlaceholderFormat=invalid format "{1}": {0}
OutputPattern.errorInvalidPlaceholderFormatArgument=invalid format "{1}": {0}
OutputPattern.errorInvalidRandomNumber=invalid random number format: {0}
OutputPattern.errorInvalidRandomNumberArgument=invalid random number format: {0}
OutputPattern.errorInvalidRandomNumberRange=the random number [lower..upper] must be lower < upper: {0}
OutputPattern.errorUnclosedPlaceholder=placeholder is not closed: {0}
OutputPattern.errorUnclosedRandomNumber=random number is not closed: {0}
OutputPattern.errorUnclosedVariable=variable is not closed: {0}
OutputPattern.errorUndefinedOrderProperty=unknown property "{1}": {0}
OutputPattern.errorUndefinedProperty=unknown property "{1}": {0}
